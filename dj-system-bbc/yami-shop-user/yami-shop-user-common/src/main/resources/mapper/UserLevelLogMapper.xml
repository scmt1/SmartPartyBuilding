<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yami.shop.user.common.dao.UserLevelLogMapper">

  <resultMap id="userLevelLogMap" type="com.yami.shop.user.common.model.UserLevelLog">
    <id column="level_log_id" property="levelLogId" />
    <result column="user_id" property="userId"/>
    <result column="level" property="level"/>
    <result column="level_name" property="levelName"/>
    <result column="level_type" property="levelType"/>
    <result column="create_time" property="createTime"/>
    <result column="state" property="state"/>
    <result column="gift_time" property="giftTime"/>
    <result column="dev_id" property="devId"/>
    <result column="dev_no" property="devNo"/>
    <result column="addr_order_id" property="addrOrderId"/>
    <result column="pay_no" property="payNo"/>
    <result column="pay_type" property="payType"/>
    <result column="pay_amount" property="payAmount"/>
    <result column="is_payed" property="isPayed"/>
    <result column="term" property="term"/>
    <result column="term_type" property="termType"/>
  </resultMap>
  <select id="getPage" resultType="com.yami.shop.user.common.model.UserLevelLog">
    SELECT ul.*,u.nick_name,d.dvy_name FROM tz_user_level_log ul
    JOIN tz_user u ON u.user_id = ul.user_id
    LEFT JOIN tz_delivery d ON d.dvy_id = ul.dev_id
    <where>
      <if test="userLevelLog.nickName != null">
        u.nick_name LIKE CONCAT("%",#{userLevelLog.nickName},"%")
      </if>
      <if test="userLevelLog.state != null">
        And ul.state = #{userLevelLog.state}
      </if>
    </where>
  </select>
    <select id="getMaxLevelByUserId" resultType="java.lang.Integer">
      SELECT MAX(`level`) FROM `tz_user_level_log` WHERE user_id = #{userId} and level_type=0
    </select>
    <select id="countGrowthMember" resultType="java.lang.Integer"
            parameterType="com.yami.shop.bean.param.CustomerReqParam">
      SELECT COUNT(DISTINCT(user_id))
      FROM `tz_user_level_log` ul
      <where>
        <if test="param.dateTime != null">
          AND ul.create_time <![CDATA[ <= ]]> #{param.dateTime}
        </if>
        <if test="param.dateTime == null and param.startTime != null and param.endTime != null">
          AND ( ul.create_time  <![CDATA[ >= ]]> #{param.startTime} AND ul.create_time  <![CDATA[ <= ]]> #{param.endTime})
        </if>
      </where>
    </select>
  <select id="countGrowthMemberByTime" resultType="com.yami.shop.bean.param.CustomerPayParam"
            parameterType="com.yami.shop.bean.param.CustomerReqParam">
      SELECT DATE_FORMAT(ul.create_time,'%Y-%m-%d') AS create_date,COUNT(DISTINCT(user_id)) AS number
      FROM `tz_user_level_log` ul
      where ul.create_time  <![CDATA[ >= ]]> #{param.startTime} AND ul.create_time  <![CDATA[ <= ]]> #{param.endTime}
      GROUP BY DATE_FORMAT(ul.create_time,'%Y-%m-%d');
    </select>

  <select id="countGrowthMemberByParam" resultType="com.yami.shop.bean.param.MemberGrowthDetailParam"
          parameterType="com.yami.shop.bean.param.MemberGrowthReqParam">
      SELECT COUNT(temp.level) AS memberNum,temp.level
      FROM
      (
        SELECT COUNT(user_id) AS num,ul.level,ul.user_id,ul.level_type
        FROM `tz_user_level_log` ul
        <where>
          ul.is_payed = 1
          <if test="param.dateTime != null">
            AND ul.create_time <![CDATA[ <= ]]> #{param.dateTime}
          </if>
          <if test="param.dateTime == null and param.startTime != null and param.endTime != null">
            AND ( ul.create_time  <![CDATA[ >= ]]> #{param.startTime} AND ul.create_time  <![CDATA[ <= ]]> #{param.endTime})
          </if>
        </where>
        GROUP BY ul.level,ul.user_id
      ) temp GROUP BY temp.level

  </select>
  <select id="listUserIdByRechargeNum" resultType="java.lang.String">
    SELECT user_id
    FROM tz_user_level_log
    WHERE is_payed = #{isPayed}
    <if test="startDate != null">
      AND create_time BETWEEN #{startDate}
    </if>
    <if test="endDate != null">
      AND #{endDate}
    </if>
    GROUP BY user_id
    HAVING COUNT(user_id) BETWEEN #{minNum} AND #{maxNum}
  </select>
  <select id="listUserIdByEarliestRechargeTime" resultType="java.lang.String">
    SELECT
      tz_user_level_log.user_id
    FROM
      (SELECT
         user_id,
         MIN(create_time) AS earliest
       FROM
         tz_user_level_log
       WHERE is_payed = #{isPayed} AND level_type = 1
         AND create_time BETWEEN #{startDate}
         AND #{endDate}
       GROUP BY user_id) temp
        LEFT OUTER JOIN tz_user_level_log
                        ON temp.user_id = tz_user_level_log.user_id
                          AND temp.earliest = tz_user_level_log.create_time
  </select>

  <select id="getMaxCrtTimeByUserId" resultType="com.yami.shop.user.common.model.UserLevelLog">
    SELECT * FROM tz_user_level_log WHERE user_id=#{userId} ORDER BY create_time DESC LIMIT 1
  </select>
  <select id="pageBuyLevelLog" resultType="com.yami.shop.user.common.model.UserLevelLog">
    SELECT ull.*, u.nick_name, u.pic, u.user_name
    FROM tz_user_level_log ull
    JOIN tz_user u ON ull.user_id = u.user_id
    WHERE ull.level_type = 1 AND ull.pay_amount > 0
    <if test="userLevelLog.nickName != null and userLevelLog.nickName != ''">
      AND u.nick_name LIKE CONCAT('%', #{userLevelLog.nickName}, '%')
    </if>
    <if test="userLevelLog.createStartTime != null">
      AND ull.create_time <![CDATA[ >= ]]> #{userLevelLog.createStartTime}
    </if>
    <if test="userLevelLog.createEndTime != null">
      AND ull.create_time <![CDATA[ <= ]]> #{userLevelLog.createEndTime}
    </if>
    ORDER BY ull.level_log_id DESC
  </select>

  <select id="countPayUserByTime" resultType="java.lang.Integer">
    SELECT COUNT(DISTINCT(user_id)) AS number
    FROM `tz_user_level_log` ul
    where ul.create_time  <![CDATA[ >= ]]> #{param.startTime} AND ul.create_time  <![CDATA[ <= ]]> #{param.endTime}
  </select>
</mapper>
